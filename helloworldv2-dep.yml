apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"name":"helloworld-v2","namespace":"default"},"spec":{"replicas":1,"template":{"metadata":{"labels":{"app":"helloworld","version":"v2"}},"spec":{"containers":[{"image":"istio/examples-helloworld-v2","imagePullPolicy":"IfNotPresent","name":"helloworld","ports":[{"containerPort":5000}],"resources":{"requests":{"cpu":"100m"}}}]}}}}
  creationTimestamp: null
  generation: 1
  labels:
    app: helloworld
    version: v2
  name: helloworld-v2
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/helloworld-v2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: helloworld
      version: v2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: helloworld
        version: v2
    spec:
      containers:
      - image: istio/examples-helloworld-v2
        imagePullPolicy: IfNotPresent
        name: helloworld
        ports:
        - containerPort: 5000
          protocol: TCP
        resources:
          requests:
            cpu: 100m
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
